{"version":3,"sources":["styles/main.scss","components/Header.js","components/Form.js","components/Countries.js","components/Body.js","components/CountryDetails.js","WorldCountriesPage.js","index.js","styles/modules/_colors.scss"],"names":["module","exports","Header","props","headerStyle","backgroundColor","theme","elementsColor","color","textColor","mode","className","id","style","onClick","handleClick","Form","inputStyle","onSubmit","handleSubmit","type","name","placeholder","value","searchText","onChange","handleChange","selectedRegion","Countries","styles","background","data","displayedCountries","map","country","key","numericCode","to","textDecoration","src","flag","alt","population","region","capital","Body","getCountry","countries","code","find","alpha3Code","filter","undefined","CountryDetails","match","params","countryName","history","buttonStyle","goBack","nativeName","subregion","topLevelDomain","currencies","currency","Fragment","languages","language","borders","length","visibility","marginRight","borderCountry","WorldCountriesPage","state","countriesData","savedCountriesData","colors","lightModeBackground","lightModeText","lightModeElements","bind","toggleThemeMode","fetch","then","response","json","cleanData","setState","catch","error","console","log","includes","modifiedCountry","replace","text","this","startsWith","allCountries","event","preventDefault","target","charAt","toUpperCase","slice","toLowerCase","findCountry","filterByRegion","moonIconVisibility","sunIconVisibility","document","getElementById","display","darkModeBackground","darkModeText","darkModeElements","exact","path","render","React","Component","ReactDOM"],"mappings":"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","file":"static/js/main.a662080e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkModeElements\":\"#2b3945\",\"darkModeBackground\":\"#202c37\",\"darkModeText\":\"#fff\",\"lightModeElements\":\"#fff\",\"lightModeBackground\":\"#fafafa\",\"lightModeText\":\"#111517\",\"lightModeInput\":\"#858585\"};","import React from \"react\";\n\nfunction Header(props) {\n    let headerStyle = {backgroundColor: props.theme.elementsColor, color: props.theme.textColor};\n    let mode = props.theme.mode;\n\n    return(\n        <div className = \"header-component-style\" id = \"wc-header\" style = {headerStyle}>\n            <h3 className = \"header-title\">Where in the world?</h3>\n            <button className = \"theme-button\" id = \"wc-theme-button\" onClick = {props.handleClick} style = {headerStyle}>\n                <span>\n                    <i className = \"far fa-moon\" id = \"regular-moon\"></i>\n                    <i className = \"fas fa-sun\" id = \"solid-sun\"></i>\n                </span>\n                &nbsp;{mode}\n            </button>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Form(props) {\n    let inputStyle = {backgroundColor: props.theme.elementsColor, color: props.theme.textColor};\n    \n    return(\n        <form className = \"body-header\" onSubmit = {props.handleSubmit}> \n            <input \n                id = \"wc-search-box\"\n                className = \"search-box\"\n                type = \"text\" \n                name = \"searchBox\" \n                placeholder = \"Search for a country...\"\n                value = {props.searchText}\n                onChange = {props.handleChange}\n                style = {inputStyle}\n            />\n\n            <select \n                id = \"wc-dropdown-box\" \n                className = \"dropdown-box\" \n                name = \"dropdownBox\"\n                value = {props.selectedRegion}\n                onChange = {props.handleChange}\n                style = {inputStyle}\n            >\n                <option value = \"All\">All</option>\n                <option value = \"Africa\">Africa</option>\n                <option value = \"Americas\">Americas</option>\n                <option value = \"Asia\">Asia</option>\n                <option value = \"Europe\">Europe</option>\n                <option value = \"Oceania\">Oceania</option>\n            </select>\n        </form>\n    );\n}\n\nexport default Form;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nfunction Countries(props) {\n    const styles = {\n        background: props.data.theme.elementsColor,\n        color: props.data.theme.textColor\n    }\n    \n    return(\n        <div className = \"countries-layout\">\n            {\n                props.data.displayedCountries.map(country => {\n                    return(\n                        <div className = \"card\" key = {country.numericCode} style = {styles}>\n                            <Link to = {`/${country.name}`} style = {{textDecoration: \"none\"}}>\n                                <img \n                                    className = \"card-flag-image\"\n                                    src = {country.flag} \n                                    alt = \"Country's Flag\"\n                                />\n\n                                <div className = \"card-info\">\n                                    <h3><b>{country.name}</b></h3>\n\n                                    <p><b>Population:</b> {country.population}</p>\n                                    <p><b>Region:</b> {country.region}</p>\n                                    <p><b>Capital:</b> {country.capital}</p>\n                                </div>\n                            </Link>\n                        </div>\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default Countries;","import React from \"react\";\nimport Form from \"./Form\";\nimport Countries from \"./Countries\";\n\nfunction Body(props) {\n    return(\n        <div className = \"body-component-style\" id = \"wc-body\" style = {{backgroundColor: props.data.theme.backgroundColor}}>\n            <Form \n                handleSubmit = {props.handleSubmit}\n                handleChange = {props.handleChange}\n                theme = {props.data.theme}\n                searchText = {props.searchText}\n                selectedRegion = {props.selectedRegion}\n            />\n\n            <Countries \n                data = {props.data}\n            />\n        </div>\n    );\n}\n\nexport default Body;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nfunction getCountry(countries, name = \"\", code = \"\") {\n\tlet data;\n\n\t//Return all the country's data\n\tif(name !== \"\" && code === \"\") data = countries.find(country => country.name === name);\n\n\t//Return only the country's name using it's Alpha3Code\n\telse if(name === \"\" && code !== \"\") {\n\t\tdata = countries.map(country => {\n\t\t\tif(country.alpha3Code === code) return country.name;\n\t\t})\n\t\t.filter(country => country !== undefined); //Remove the empty items\n\t}\n\n\treturn data;\n}\n\nfunction CountryDetails(props) {\n\tlet country = getCountry(props.data, props.match.params.countryName, undefined);\n\tlet history = props.history;\n\tlet backgroundColor = props.theme.elementsColor;\n\tlet textColor = props.theme.textColor;\n\tlet elementsColor = props.theme.elementsColor;\n\tlet buttonStyle = {backgroundColor: elementsColor, color: textColor};\n\n\treturn(\n\t\t<div className = \"country-details-layout\" style = {{backgroundColor: backgroundColor}}>\n\t\t\t<div className = \"country-details-left-column\">\n\t\t\t\t<button className = \"country-details-left-column-back-button\" onClick = {props.history.goBack} style = {buttonStyle}>\n\t\t\t\t\t\t<i className = \"fas fa-arrow-left\"></i>&nbsp;&nbsp;Back\n\t\t\t\t</button>\n\n\t\t\t\t<div className = \"country-details-left-column-image\">\n\t\t\t\t\t<img src = {country.flag} alt = \"Country's Flag\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className = \"country-details-text\" style = {{color: textColor}}>\n\t\t\t\t<div className = \"country-details-text-title\"><p><b>{country.name}</b></p></div>\n\t\t\t\t<div className = \"country-details-text-column\">\n\t\t\t\t\t<div className = \"country-details-text-column-left\">\n\t\t\t\t\t\t<p><b>Native Name: </b>{country.nativeName}</p>\n\t\t\t\t\t\t<p><b>Population: </b>{country.population}</p>\n\t\t\t\t\t\t<p><b>Region: </b>{country.region}</p>\n\t\t\t\t\t\t<p><b>Sub Region: </b>{country.subregion}</p>\n\t\t\t\t\t\t<p><b>Capital: </b>{country.capital}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"country-details-text-column-right\">\n\t\t\t\t\t\t<p><b>Top Level Domain: </b>{country.topLevelDomain}</p>\n\n\t\t\t\t\t\t<p><b>Currencies: </b>{country.currencies.map(currency => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<React.Fragment key = {country.numericCode + currency.name}>\n\t\t\t\t\t\t\t\t\t{currency.name} </React.Fragment>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}</p>\n\n\t\t\t\t\t\t<p><b>Languages: </b>{country.languages.map(language => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<React.Fragment key = {country.numericCode + language.name}>\n\t\t\t\t\t\t\t\t\t{language.name} </React.Fragment>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div className = \"country-details-text-borders-row\">\n\t\t\t\t\t<label style = {country.borders.length === 0 ? \n\t\t\t\t\t\t\t\t\t{visibility: \"hidden\"} : \n\t\t\t\t\t\t\t\t\t{visibility: \"visible\", marginRight: \"10px\"}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<b>Border Countries:</b>\n\t\t\t\t\t</label>\n\n\t\t\t\t\t{country.borders.map(borderCountry => {\n\t\t\t\t\t\tlet countryName = getCountry(props.data, undefined, borderCountry)[0];\n\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<Link  key = {countryName} to = {`/${countryName}`} style = {{textDecoration: \"none\"}}>\n\t\t\t\t\t\t\t\t<button className = \"borderCountriesLinks\" style = {buttonStyle}>\n\t\t\t\t\t\t\t\t\t{countryName}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t);\n}\n\nexport default CountryDetails;","import React, {Fragment} from \"react\";\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport CountryDetails from \"./components/CountryDetails\";\nimport colors from \"./styles/modules/_colors.scss\";\n\nclass WorldCountriesPage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            countriesData: [],\n            displayedCountries: [],\n            savedCountriesData: [],\n            searchText: \"\",\n            selectedRegion: \"All\",\n            theme: {\n                mode: \"Dark Mode\",\n                backgroundColor: colors.lightModeBackground,\n            \ttextColor: colors.lightModeText,\n                elementsColor: colors.lightModeElements,\n            }\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.toggleThemeMode = this.toggleThemeMode.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"https://restcountries.eu/rest/v2/all\")\n        .then(response => response.json())\n        .then(data => {\n            let cleanData = this.cleanData(data);\n\n            this.setState({\n                countriesData: cleanData,\n                displayedCountries: cleanData,\n                savedCountriesData: cleanData\n            });\n        })\n        .catch(error => console.log(\"ERROR: Data retrieving failed!\"))\n    }\n\n    cleanData(countries) {\n        return countries.map(country => {\n            if(country.name.includes(\"(\")){\n                let modifiedCountry = country;\n                modifiedCountry.name = country.name.replace(/ of( the|)/g, \"\");\n\t\t\t\treturn modifiedCountry;\n            }\n\t\t\telse\n\t\t\t\treturn country;\n        });\n    }\n    \n    findCountry(text) {\n        let savedCountriesData = this.state.savedCountriesData;\n\n        if(text === \"\") {\n            return savedCountriesData;\n        }\n        else {\n            return savedCountriesData.filter(country => {\n                return country.name.startsWith(text);\n            });\n        }\n    }\n\n    filterByRegion(region) {\n        let allCountries = this.state.countriesData;\n        if(region === \"All\") return allCountries;\n        else {\n            return allCountries.filter(country => {\n                return country.region === region;\n            });\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target;\n\n        if(name === \"searchBox\") {\n            let text = value;\n            let countryName = text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n\n            let data = this.findCountry(countryName);\n            this.setState({\n                displayedCountries: data,\n                searchText: value\n            });\n        }\n\n        else if(name === \"dropdownBox\") {\n            let data = this.filterByRegion(value);\n            this.setState({\n                displayedCountries: data,\n                savedCountriesData: data,\n                selectedRegion: value\n            });\n        }\n    }\n\n\ttoggleThemeMode(mode, backgroundColor, textColor, elementsColor, moonIconVisibility, sunIconVisibility) {\n\t\tthis.setState({\n\t\t\ttheme: {\n                mode: mode,\n                backgroundColor: backgroundColor,\n            \ttextColor: textColor,\n            \telementsColor: elementsColor\n            }\n        });\n        \n        document.getElementById(\"regular-moon\").style.display = moonIconVisibility;\n\t    document.getElementById(\"solid-sun\").style.display = sunIconVisibility;\n\t}\n\n\thandleClick() {\n\t    const mode = this.state.theme.mode;\n\n\t    if(mode === \"Dark Mode\")\n\t        this.toggleThemeMode(\"Light Mode\", colors.darkModeBackground, \n\t        colors.darkModeText, colors.darkModeElements, \"none\", \"inline\");\n\n\t    else if(mode === \"Light Mode\")\n\t        this.toggleThemeMode(\"Dark Mode\", colors.lightModeBackground, \n\t        colors.lightModeText, colors.lightModeElements, \"inline\", \"none\");     \n\t}\n\n    render() {\n        return(\n            <Router>\n                <Switch>\n                    <Fragment>\n                        <Header\n                            handleClick = {this.handleClick}\n                            theme = {this.state.theme}\n                        />\n                        <Route \n                            exact path = \"/\" \n                            render = {\n                                (props) => <Body \n                                                {...props} \n                                                data = {this.state}\n                                                handleSubmit = {this.handleSubmit} \n                                                handleChange = {this.handleChange}\n                                                searchText = {this.state.searchText}\n                                                selectedRegion = {this.state.selectedRegion}\n                                            />\n                                    } \n                        />\n                        <Route \n                            path = \"/:countryName\" \n                            render = {\n                                (props) => <CountryDetails \n                                                {...props}\n                                                data = {this.state.countriesData}\n                                                theme = {this.state.theme}\n                                            />\n                                    }\n                        />\n                    </Fragment>\n                </Switch>\n            </Router>\n            );\n      }\n}\n\nexport default WorldCountriesPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WorldCountriesPage from './WorldCountriesPage';\nimport './styles/main.scss';\n\nReactDOM.render(<WorldCountriesPage />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkModeElements\":\"#2b3945\",\"darkModeBackground\":\"#202c37\",\"darkModeText\":\"#fff\",\"lightModeElements\":\"#fff\",\"lightModeBackground\":\"#fafafa\",\"lightModeText\":\"#111517\",\"lightModeInput\":\"#858585\"};"],"sourceRoot":""}